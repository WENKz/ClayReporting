@{
    ViewBag.Title = "Graph";

}


<div class="mdl-layout__tab-panel is-active" id="overview">
    <section class="section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp">
        <div class="mdl-card mdl-cell mdl-cell--12-col-desktop mdl-cell--6-col-tablet mdl-cell--4-col-phone">
            <div class="mdl-card__supporting-text">
                <h4>Rechercher par date</h4>
                <div style="text-align:center">
                    <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                        <label class="" for="from">From:</label>

                        <input class="mdl-textfield__input" type="date" id="from">
                    </div>
                    <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                        <label class="" for="to">To:</label>

                        <input class="mdl-textfield__input" type="date" id="to">
                    </div>

                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored mdl-shadow--4dp mdl-color--accent" type="submit" value="submit"><i class="material-icons">search</i></button>
                </div>
            </div>
        </div>

    </section>

</div>

<div style="max-width:60%; margin:auto">
    <h2>Graphique Quality/Lot</h2>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <div id="chart_div"></div>

    <h2>Graphique Quality/Component</h2>

    <div id="chart_div_qc"></div>

    <h2>Graphique Performance/Layout</h2>

    <div id="chart_div_pl"></div>

    <h2>Graphique Nombre de lot/Color</h2>

    <div id="chart_div_nc"></div>
</div>

@ViewData["date"];
<script>
    var graphC = [];
    var graphQC = [];
    var graphPL = [];
    var graphNC = [];

    @foreach (var std in ViewData["list"] as IDictionary<int, Dictionary<string, dynamic>>)
            {

              <text>

    graphC.push(['@std.Value["lot"]', @std.Value["quality"], '@std.Value["couleur"]']);
    graphQC.push(['@std.Value["composant"]',@std.Value["quality"],'@std.Value["couleur"]']);
    graphPL.push(['@std.Value["layout"]',@std.Value["performance"],'@std.Value["couleur"]']);
    graphNC.push(['@std.Value["couleur"]',@std.Value["lot"],'@std.Value["couleur"]']);

             </text>
            }

    google.charts.load('current', { packages: ['corechart', 'bar'] });


    google.charts.setOnLoadCallback(drawBasic);
    google.charts.setOnLoadCallback(drawGraphQC);
    google.charts.setOnLoadCallback(drawGraphPL);
    google.charts.setOnLoadCallback(drawGraphNC);

    function drawBasic() {

        var newArray = [];

        var countT = graphC.length;
        newArray[0] = ["lot", "Quality", { role: 'style' }];

        for (j = 0; j <= (countT - 1) ; j++) {
            newArray[(j + 1)] = graphC[j];
        }
        var data = google.visualization.arrayToDataTable(newArray);

        var options = {
            vAxis: {
                ticks: [
                    { v: 10, f: 'Low' },
                    { v: 20, f: "Medium" },
                    { v: 30, f: "Hight" }
                ],
                title: 'Quality'

            },
            hAxis: {
                title: 'Numéro de lot',
            }, legend: { position: "none" },
        };

        var chart = new google.visualization.ColumnChart(
          document.getElementById('chart_div'));

        chart.draw(data, options);
    }

    function drawGraphQC() {

        var newArray = [];

        var countT = graphQC.length;
        newArray[0] = ['Component', 'Quality', { role: 'style' }];

        for (j = 0; j <= (countT - 1) ; j++) {
            newArray[(j + 1)] = graphQC[j];
        }
        var data = google.visualization.arrayToDataTable(newArray);

        var options = {
            vAxis: {
                ticks: [
                    { v: 10, f: 'Low' },
                    { v: 20, f: "Medium" },
                    { v: 30, f: "Hight" }
                ],
                title: 'Quality'
            },
            hAxis: {
                title: 'Component',
            }, legend: { position: "none" },
        };

        var chart = new google.visualization.ColumnChart(
          document.getElementById('chart_div_qc'));

        chart.draw(data, options);
    }

    function drawGraphPL() {

        var newArray = [];

        var countT = graphPL.length;
        newArray[0] = ["Layout", "Performance", { role: 'style' }];

        for (j = 0; j <= (countT - 1) ; j++) {
            newArray[(j + 1)] = graphPL[j];
        }

        var data = google.visualization.arrayToDataTable(newArray);

        var options = {
            vAxis: {
                ticks: [
                    { v: 10, f: 'Low' },
                    { v: 20, f: "Medium" },
                    { v: 30, f: "Hight" }
                ],
                title: 'Performance'
            },
            hAxis: {
                title: 'Layout',
            }, legend: { position: "none" },
        };

        var chart = new google.visualization.ColumnChart(
          document.getElementById('chart_div_pl'));

        chart.draw(data, options);
    }

    function drawGraphNC() {

        var newArray = [];

        var countT = graphNC.length;
        newArray[0] = ["Color", "NB lot", { role: 'style' }];

        for (j = 0; j <= (countT - 1) ; j++) {
            newArray[(j + 1)] = graphNC[j];
        }
        var data = google.visualization.arrayToDataTable(newArray);

        var options = {
            vAxis: {

                title: 'NB lot'
            },
            hAxis: {
                title: 'Color',
            }, legend: { position: "none" },
        };

        var chart = new google.visualization.ColumnChart(
          document.getElementById('chart_div_nc'));

        chart.draw(data, options);
    }
</script>